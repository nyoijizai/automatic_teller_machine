// 实用工具

$utilities: () !default;
$utilities: map-merge(
 (
  'float': (
   responsive: true,
   property: float,
   values: left right none,
  ),
  'display': (
   responsive: true,
   print: true,
   property: display,
   class: d,
   values: inline inline-block block grid table table-row table-cell flex
    inline-flex none,
  ),
  // 尺寸
   'width':
   (
    property: width,
    class: w,
    values: (
     25: 25%,
     45: 45%,
     50: 50%,
     75: 75%,
     100: 100%,
     auto: auto,
    ),
   ),
  'height': (
   property: height,
   class: h,
   values: (
    25: 25%,
    50: 50%,
    75: 75%,
    100: 100%,
    auto: auto,
   ),
  ),
  // Flex
   'flex':
   (
    responsive: true,
    property: flex,
    values: (
     fill: 1 1 auto,
    ),
   ),
  'flex-direction': (
   responsive: true,
   property: flex-direction,
   class: flex,
   values: row column row-reverse column-reverse,
  ),
  'flex-grow': (
   responsive: true,
   property: flex-grow,
   class: flex,
   values: (
    grow-0: 0,
    grow-1: 1,
   ),
  ),
  'flex-shrink': (
   responsive: true,
   property: flex-shrink,
   class: flex,
   values: (
    shrink-0: 0,
    shrink-1: 1,
   ),
  ),
  'flex-wrap': (
   responsive: true,
   property: flex-wrap,
   class: flex,
   values: wrap nowrap wrap-reverse,
  ),
  'gap': (
   responsive: true,
   property: gap,
   class: gap,
   values: $spacers,
  ),
  'justify-content': (
   responsive: true,
   property: justify-content,
   values: (
    start: flex-start,
    end: flex-end,
    center: center,
    between: space-between,
    around: space-around,
    evenly: space-evenly,
   ),
  ),
  'align-items': (
   responsive: true,
   property: align-items,
   values: (
    start: flex-start,
    end: flex-end,
    center: center,
    baseline: baseline,
    stretch: stretch,
   ),
  ),
  'align-content': (
   responsive: true,
   property: align-content,
   values: (
    start: flex-start,
    end: flex-end,
    center: center,
    between: space-between,
    around: space-around,
    stretch: stretch,
   ),
  ),
  'align-self': (
   responsive: true,
   property: align-self,
   values: (
    auto: auto,
    start: flex-start,
    end: flex-end,
    center: center,
    baseline: baseline,
    stretch: stretch,
   ),
  ),
  'order': (
   responsive: true,
   property: order,
   values: (
    first: -1,
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    last: 6,
   ),
  ),
  // Margin
   'margin':
   (
    responsive: true,
    property: margin,
    class: m,
    values:
     map-merge(
      $spacers,
      (
       auto: auto,
      )
     ),
   ),
  'margin-x': (
   responsive: true,
   property: margin-right margin-left,
   class: mx,
   values:
    map-merge(
     $spacers,
     (
      auto: auto,
     )
    ),
  ),
  'margin-y': (
   responsive: true,
   property: margin-top margin-bottom,
   class: my,
   values:
    map-merge(
     $spacers,
     (
      auto: auto,
     )
    ),
  ),
  'margin-top': (
   responsive: true,
   property: margin-top,
   class: mt,
   values:
    map-merge(
     $spacers,
     (
      auto: auto,
     )
    ),
  ),
  'margin-right': (
   responsive: true,
   property: margin-right,
   class: mr,
   values:
    map-merge(
     $spacers,
     (
      auto: auto,
     )
    ),
  ),
  'margin-bottom': (
   responsive: true,
   property: margin-bottom,
   class: mb,
   values:
    map-merge(
     $spacers,
     (
      auto: auto,
     )
    ),
  ),
  'margin-left': (
   responsive: true,
   property: margin-left,
   class: ml,
   values:
    map-merge(
     $spacers,
     (
      auto: auto,
     )
    ),
  ),
  // Padding
   'padding':
   (
    responsive: true,
    property: padding,
    class: p,
    values: $spacers,
   ),
  'padding-x': (
   responsive: true,
   property: padding-right padding-left,
   class: px,
   values: $spacers,
  ),
  'padding-y': (
   responsive: true,
   property: padding-top padding-bottom,
   class: py,
   values: $spacers,
  ),
  'padding-top': (
   responsive: true,
   property: padding-top,
   class: pt,
   values: $spacers,
  ),
  'padding-right': (
   responsive: true,
   property: padding-right,
   class: pr,
   values: $spacers,
  ),
  'padding-bottom': (
   responsive: true,
   property: padding-bottom,
   class: pb,
   values: $spacers,
  ),
  'padding-left': (
   responsive: true,
   property: padding-left,
   class: pl,
   values: $spacers,
  ),
  // 字体
   'font-size':
   (
    rfs: true,
    property: font-size,
    class: fs,
    values: $font-sizes,
   ),
  'font-weight': (
   property: font-weight,
   class: fw,
   values: (
    light: $font-weight-light,
    lighter: $font-weight-lighter,
    normal: $font-weight-normal,
    bold: $font-weight-bold,
    bolder: $font-weight-bolder,
   ),
  ),
  'text-align': (
   responsive: true,
   property: text-align,
   class: text,
   values: left right center,
  ),
  'color': (
   property: color,
   class: text,
   values:
    map-merge(
     $theme-colors,
     (
      'white': $white,
      'body': $body-color,
      'muted': $text-muted,
      'black-50': rgba($black, 0.5),
      'white-85': rgba($white, 0.85),
      'reset': inherit,
     )
    ),
  ),
  'background-color': (
   property: background-color,
   class: bg,
   values:
    map-merge(
     $theme-colors,
     (
      'body': $body-bg,
      'white': $white,
      'transparent': transparent,
     )
    ),
  ),
  'rounded': (
   property: border-radius,
   class: rounded,
   values: (
    null: $border-radius,
    0: 0,
    1: $border-radius-sm,
    2: $border-radius,
    3: $border-radius-lg,
    circle: 50%,
    pill: $border-radius-pill,
   ),
  ),
  'rounded-top': (
   property: border-top-left-radius border-top-right-radius,
   class: rounded-top,
   values: (
    null: $border-radius,
   ),
  ),
  'rounded-right': (
   property: border-top-right-radius border-bottom-right-radius,
   class: rounded-right,
   values: (
    null: $border-radius,
   ),
  ),
  'rounded-bottom': (
   property: border-bottom-right-radius border-bottom-left-radius,
   class: rounded-bottom,
   values: (
    null: $border-radius,
   ),
  ),
  'rounded-left': (
   property: border-bottom-left-radius border-top-left-radius,
   class: rounded-left,
   values: (
    null: $border-radius,
   ),
  ),
 ),
 $utilities
);
